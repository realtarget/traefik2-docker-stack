version: '3'

services:

  rocketchat:
    image: rocketchat/rocket.chat:latest
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    volumes:
      - rocketchat_uploads:/app/uploads
    environment:
      - PORT=3000
      - ROOT_URL=http://localhost:3000
      - MONGO_URL=mongodb://mongo:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local
      - MAIL_URL=smtp://smtp.email
    depends_on:
      - mongo
    # Control the number of instances deployed
    deploy:
      mode: replicated
      replicas: 3
      labels:
        - traefik.enable=true
        - traefik.http.routers.rocketchat.entrypoints=web
        - traefik.http.routers.rocketchat.rule=Host(`rocketchat.domain.com`)
        - traefik.http.services.rocketchat.loadbalancer.server.port=3000
        - traefik.docker.network=traefik-proxy
    networks:
      - traefik-proxy
      - default

  mongo:
    image: mongo:4.0
    volumes:
     - rocketchat_db:/data/db
     #- ./data/dump:/dump
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1
       # Control the number of instances deployed
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.enable=false"

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
    # Control the number of instances deployed
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.enable=false"
    image: mongo:3.4
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo mongo/rocketchat --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      - mongo

  # hubot, the popular chatbot (add the bot user first and change the password before starting this image)
  hubot:
    entrypoint: [ '/bin/sh', '-c', 'sleep 900000' ]
    image: rocketchat/hubot-rocketchat:latest
    environment:
      - ROCKETCHAT_URL=rocketchat:3000
      - ROCKETCHAT_ROOM=GENERAL
      - ROCKETCHAT_USER=bot
      # you can add more scripts as you'd like here, they need to be installable by npm
      - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics
    depends_on:
      - rocketchat
    # Control the number of instances deployed
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.enable=false"
    volumes:
      - rocketchat_scripts:/home/hubot/scripts
    # this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier
    ports:
      - 3001:8080

networks:
  traefik-proxy:
    external: true

volumes:
  rocketchat_db:
  rocketchat_scripts:
  rocketchat_uploads:
